// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String
  email          String   @unique
  emailVerified  DateTime? // Null if not verified
  password       String   // For hashed passwords
  image          String?
  role           Role     @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  user              User    @relation(fields: [userId], references: [id])
  provider          String
  providerAccountId String
  createdAt         DateTime @default(now())
}

model Session {
  id        String   @id @default(cuid())
  sessionToken String @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime
}

enum Role {
  USER
  SELLER
  ADMIN
}

model Category {
  id            String        @id @default(uuid())
  name          String
  image         String?
  subcategories Subcategory[]
  auctions      Auction[]     @relation("AuctionCategories")
  lots          Lot[]         @relation("LotCategories")
}

model Subcategory {
  id         String   @id @default(uuid())
  name       String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}

enum Status {
  OPEN
  CLOSED
  UPCOMING
}

enum Unit {
  CM
  IN
}

enum VenueType {
  ONLINE
  IN_PERSON
}

model Auction {
  id                  String        @id @default(uuid())
  title               String
  description         String        @default("Not provided")
  timeStamp           DateTime      @default(now())
  startDate           DateTime
  endDate             DateTime
  images              String[]
  auctioneer          String        @default("Not provided")
  location            String[]      @default([])
  status              Status        @default(UPCOMING)
  tags                String[]      @default([])
  noOfLots            Int           @default(0)
  isFeatured          Boolean       @default(false)
  isPublished         Boolean       @default(false)
  isActive            Boolean       @default(false)
  isLive              Boolean       @default(false)
  venueType           VenueType     @default(IN_PERSON)
  // Additional Details
  venue               String?
  registrationDeadline DateTime?
  contactPersonName    String?
  contactPersonEmail   String?
  contactPersonPhone   String?
  
  // Relations
  categories          Category[]    @relation("AuctionCategories")
  lots               Lot[]
  viewingDates       ViewingDate[] 
}

model ViewingDate {
  id        String   @id @default(uuid())
  start     DateTime
  end       DateTime
  auctionId String
  auction   Auction  @relation(fields: [auctionId], references: [id])
}

model Lot {
  id             String   @id @default(uuid())
  title          String
  lotNumber      String?
  artist         String?
  estimatedPrice String?
  currentBid     Float?
  images         String[]
  status         Status   @default(UPCOMING)
  description    String   @default("Not provided")
  timeStamp      DateTime @default(now())
  startingBid    Float  @default(0)
  reservePrice   Float  @default(0)
  incrementRate  Float  @default(0)
  isSold         Boolean @default(false)
  isPublished    Boolean @default(false)
  isLive         Boolean @default(false)
  isFeatured     Boolean @default(false)
  isApproved     Boolean @default(false)
  
  // Details
  medium         String?
  height         Float?
  width          Float?
  unit           Unit     @default(CM)
  year           String?
  condition      String?
  provenance     String?
  signature      String?
  edition        String?
  
  // Relations
  auctionId      String
  auction        Auction    @relation(fields: [auctionId], references: [id])
  categories     Category[] @relation("LotCategories")
  bidHistory     Bid[]
}

model Bid {
  id        String   @id @default(uuid())
  bidder    String?
  amount    Float?
  timestamp DateTime @default(now())
  lotId     String?
  lot       Lot?      @relation(fields: [lotId], references: [id])
}


